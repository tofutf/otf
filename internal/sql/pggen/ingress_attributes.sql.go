// Code generated by pggen. DO NOT EDIT.

package pggen

import (
	"context"
	"fmt"

	"github.com/jackc/pgx/v5"
	"github.com/jackc/pgx/v5/pgconn"
	"github.com/jackc/pgx/v5/pgtype"
)

var _ genericConn = (*pgx.Conn)(nil)
var _ RegisterConn = (*pgx.Conn)(nil)

const insertIngressAttributesSQL = `INSERT INTO ingress_attributes (
    branch,
    commit_sha,
    commit_url,
    pull_request_number,
    pull_request_url,
    pull_request_title,
    sender_username,
    sender_avatar_url,
    sender_html_url,
    identifier,
    tag,
    is_pull_request,
    on_default_branch,
    configuration_version_id
) VALUES (
    $1,
    $2,
    $3,
    $4,
    $5,
    $6,
    $7,
    $8,
    $9,
    $10,
    $11,
    $12,
    $13,
    $14
);`

type InsertIngressAttributesParams struct {
	Branch                 pgtype.Text `json:"branch"`
	CommitSHA              pgtype.Text `json:"commit_sha"`
	CommitURL              pgtype.Text `json:"commit_url"`
	PullRequestNumber      pgtype.Int4 `json:"pull_request_number"`
	PullRequestURL         pgtype.Text `json:"pull_request_url"`
	PullRequestTitle       pgtype.Text `json:"pull_request_title"`
	SenderUsername         pgtype.Text `json:"sender_username"`
	SenderAvatarURL        pgtype.Text `json:"sender_avatar_url"`
	SenderHTMLURL          pgtype.Text `json:"sender_html_url"`
	Identifier             pgtype.Text `json:"identifier"`
	Tag                    pgtype.Text `json:"tag"`
	IsPullRequest          pgtype.Bool `json:"is_pull_request"`
	OnDefaultBranch        pgtype.Bool `json:"on_default_branch"`
	ConfigurationVersionID pgtype.Text `json:"configuration_version_id"`
}

// InsertIngressAttributes implements Querier.InsertIngressAttributes.
func (q *DBQuerier) InsertIngressAttributes(ctx context.Context, params InsertIngressAttributesParams) (pgconn.CommandTag, error) {
	ctx = context.WithValue(ctx, "pggen_query_name", "InsertIngressAttributes")
	cmdTag, err := q.conn.Exec(ctx, insertIngressAttributesSQL, params.Branch, params.CommitSHA, params.CommitURL, params.PullRequestNumber, params.PullRequestURL, params.PullRequestTitle, params.SenderUsername, params.SenderAvatarURL, params.SenderHTMLURL, params.Identifier, params.Tag, params.IsPullRequest, params.OnDefaultBranch, params.ConfigurationVersionID)
	if err != nil {
		return pgconn.CommandTag{}, fmt.Errorf("exec query InsertIngressAttributes: %w", err)
	}
	return cmdTag, err
}
